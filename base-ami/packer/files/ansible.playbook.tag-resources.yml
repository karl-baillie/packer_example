#
# tag-resources.yml
#
# An ansible playbook for tagging default resources that are attached to an instance.
#
# Examples:
#   /usr/local/bin/ansible-playbook \
#     /etc/ansible/playbooks/tag-resources.yml
#
---
- hosts: localhost
  connection: local
  gather_facts: yes
  tasks:
  - name: Discover EC2 instance metadata
    ec2_metadata_facts:
    register: metadata
    until: metadata is success
    retries: 10
    delay: 1
    ignore_errors: yes

  - name: Discover EC2 instance facts
    ec2_instance_facts:
      filters:
        instance-id: "{{ metadata.ansible_facts.ansible_ec2_instance_id }}"
      region: "{{ metadata.ansible_facts.ansible_ec2_placement_region }}"
    register: ec2
    until: ec2 is success
    retries: 6
    delay: 5
    ignore_errors: yes

  - name: Filter EC2 tags
    set_fact:
      tags: "{{ tags | default({}) | combine({item.key: item.value}) }}"
    when: item.key is not match('^aws:')
    with_dict: "{{ ec2.instances[0].tags }}"
    ignore_errors: yes

  - name: Tag default resources (e.g. eth0, /dev/xvda)
    ec2_tag:
      state: present
      resource: "{{ item }}"
      region: "{{ metadata.ansible_facts.ansible_ec2_placement_region }}"
      tags: "{{ tags }}"
    with_items:
    - "{{ ec2.instances[0].block_device_mappings | selectattr('device_name', 'match', '^/dev/(s|xv)da') | map(attribute='ebs.volume_id') | list }}"
    - "{{ ec2.instances[0].network_interfaces | selectattr('attachment.device_index', 'equalto', 0) | map(attribute='network_interface_id') | list }}"
    when: tags is defined
    ignore_errors: yes

